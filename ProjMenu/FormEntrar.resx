<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>